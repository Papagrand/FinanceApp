package ru.point.ui.theme

import androidx.compose.material3.Typography
import androidx.compose.material3.darkColorScheme
import androidx.compose.material3.lightColorScheme

val AppTypography = Typography()

object AppColorSchemes {
    val GreenLight = lightColorScheme(
        primary = primaryLightGreen,
        onPrimary = onPrimaryLightGreen,
        primaryContainer = primaryContainerLightGreen,
        onPrimaryContainer = onPrimaryContainerLightGreen,
        secondary = secondaryLightGreen,
        onSecondary = onSecondaryLightGreen,
        secondaryContainer = secondaryContainerLightGreen,
        onSecondaryContainer = onSecondaryContainerLightGreen,
        inversePrimary = inversePrimaryLightGreen,
        tertiary = tertiaryLight,
        onTertiary = onTertiaryLight,
        tertiaryContainer = tertiaryContainerLight,
        onTertiaryContainer = onTertiaryContainerLight,
        error = errorLight,
        onError = onErrorLight,
        errorContainer = errorContainerLight,
        onErrorContainer = onErrorContainerLight,
        background = backgroundLight,
        onBackground = onBackgroundLight,
        surface = surfaceLight,
        onSurface = onSurfaceLight,
        surfaceVariant = surfaceVariantLight,
        onSurfaceVariant = onSurfaceVariantLight,
        outline = outlineLight,
        outlineVariant = outlineVariantLight,
        scrim = scrimLight,
        inverseSurface = inverseSurfaceLight,
        inverseOnSurface = inverseOnSurfaceLight,
        surfaceDim = surfaceDimLight,
        surfaceBright = surfaceBrightLight,
        surfaceContainerLowest = surfaceContainerLowestLight,
        surfaceContainerLow = surfaceContainerLowLight,
        surfaceContainer = surfaceContainerLight,
        surfaceContainerHigh = surfaceContainerHighLight,
        surfaceContainerHighest = surfaceContainerHighestLight,
    )
    val GreenDark = darkColorScheme(
        primary = primaryDarkGreen,
        onPrimary = onPrimaryDarkGreen,
        primaryContainer = primaryContainerDarkGreen,
        onPrimaryContainer = onPrimaryContainerDarkGreen,
        secondary = secondaryDarkGreen,
        onSecondary = onSecondaryDarkGreen,
        secondaryContainer = secondaryContainerDarkGreen,
        onSecondaryContainer = onSecondaryContainerDarkGreen,
        inversePrimary = inversePrimaryDarkGreen,
        tertiary = tertiaryDark,
        onTertiary = onTertiaryDark,
        tertiaryContainer = tertiaryContainerDark,
        onTertiaryContainer = onTertiaryContainerDark,
        error = errorDark,
        onError = onErrorDark,
        errorContainer = errorContainerDark,
        onErrorContainer = onErrorContainerDark,
        background = backgroundDark,
        onBackground = onBackgroundDark,
        surface = surfaceDark,
        onSurface = onSurfaceDark,
        surfaceVariant = surfaceVariantDark,
        onSurfaceVariant = onSurfaceVariantDark,
        outline = outlineDark,
        outlineVariant = outlineVariantDark,
        scrim = scrimDark,
        inverseSurface = inverseSurfaceDark,
        inverseOnSurface = inverseOnSurfaceDark,
        surfaceDim = surfaceDimDark,
        surfaceBright = surfaceBrightDark,
        surfaceContainerLowest = surfaceContainerLowestDark,
        surfaceContainerLow = surfaceContainerLowDark,
        surfaceContainer = surfaceContainerDark,
        surfaceContainerHigh = surfaceContainerHighDark,
        surfaceContainerHighest = surfaceContainerHighestDark,
    )

    val PurpleLight = lightColorScheme(
        primary = primaryLightPurple,
        onPrimary = onPrimaryLightPurple,
        primaryContainer = primaryContainerLightPurple,
        onPrimaryContainer = onPrimaryContainerLightPurple,
        secondary = secondaryLightPurple,
        onSecondary = onSecondaryLightPurple,
        secondaryContainer = secondaryContainerLightPurple,
        onSecondaryContainer = onSecondaryContainerLightPurple,
        inversePrimary = inversePrimaryLightPurple,
        tertiary = tertiaryLight,
        onTertiary = onTertiaryLight,
        tertiaryContainer = tertiaryContainerLight,
        onTertiaryContainer = onTertiaryContainerLight,
        error = errorLight,
        onError = onErrorLight,
        errorContainer = errorContainerLight,
        onErrorContainer = onErrorContainerLight,
        background = backgroundLight,
        onBackground = onBackgroundLight,
        surface = surfaceLight,
        onSurface = onSurfaceLight,
        surfaceVariant = surfaceVariantLight,
        onSurfaceVariant = onSurfaceVariantLight,
        outline = outlineLight,
        outlineVariant = outlineVariantLight,
        scrim = scrimLight,
        inverseSurface = inverseSurfaceLight,
        inverseOnSurface = inverseOnSurfaceLight,
        surfaceDim = surfaceDimLight,
        surfaceBright = surfaceBrightLight,
        surfaceContainerLowest = surfaceContainerLowestLight,
        surfaceContainerLow = surfaceContainerLowLight,
        surfaceContainer = surfaceContainerLight,
        surfaceContainerHigh = surfaceContainerHighLight,
        surfaceContainerHighest = surfaceContainerHighestLight,
    )
    val PurpleDark = darkColorScheme(
        primary = primaryDarkPurple,
        onPrimary = onPrimaryDarkPurple,
        primaryContainer = primaryContainerDarkPurple,
        onPrimaryContainer = onPrimaryContainerDarkPurple,
        secondary = secondaryDarkPurple,
        onSecondary = onSecondaryDarkPurple,
        secondaryContainer = secondaryContainerDarkPurple,
        onSecondaryContainer = onSecondaryContainerDarkPurple,
        inversePrimary = inversePrimaryDarkPurple,
        tertiary = tertiaryDark,
        onTertiary = onTertiaryDark,
        tertiaryContainer = tertiaryContainerDark,
        onTertiaryContainer = onTertiaryContainerDark,
        error = errorDark,
        onError = onErrorDark,
        errorContainer = errorContainerDark,
        onErrorContainer = onErrorContainerDark,
        background = backgroundDark,
        onBackground = onBackgroundDark,
        surface = surfaceDark,
        onSurface = onSurfaceDark,
        surfaceVariant = surfaceVariantDark,
        onSurfaceVariant = onSurfaceVariantDark,
        outline = outlineDark,
        outlineVariant = outlineVariantDark,
        scrim = scrimDark,
        inverseSurface = inverseSurfaceDark,
        inverseOnSurface = inverseOnSurfaceDark,
        surfaceDim = surfaceDimDark,
        surfaceBright = surfaceBrightDark,
        surfaceContainerLowest = surfaceContainerLowestDark,
        surfaceContainerLow = surfaceContainerLowDark,
        surfaceContainer = surfaceContainerDark,
        surfaceContainerHigh = surfaceContainerHighDark,
        surfaceContainerHighest = surfaceContainerHighestDark,
    )

    val BlueLight = lightColorScheme(
        primary = primaryLightBlue,
        onPrimary = onPrimaryLightBlue,
        primaryContainer = primaryContainerLightBlue,
        onPrimaryContainer = onPrimaryContainerLightBlue,
        secondary = secondaryLightBlue,
        onSecondary = onSecondaryLightBlue,
        secondaryContainer = secondaryContainerLightBlue,
        onSecondaryContainer = onSecondaryContainerLightBlue,
        inversePrimary = inversePrimaryLightBlue,
        tertiary = tertiaryLight,
        onTertiary = onTertiaryLight,
        tertiaryContainer = tertiaryContainerLight,
        onTertiaryContainer = onTertiaryContainerLight,
        error = errorLight,
        onError = onErrorLight,
        errorContainer = errorContainerLight,
        onErrorContainer = onErrorContainerLight,
        background = backgroundLight,
        onBackground = onBackgroundLight,
        surface = surfaceLight,
        onSurface = onSurfaceLight,
        surfaceVariant = surfaceVariantLight,
        onSurfaceVariant = onSurfaceVariantLight,
        outline = outlineLight,
        outlineVariant = outlineVariantLight,
        scrim = scrimLight,
        inverseSurface = inverseSurfaceLight,
        inverseOnSurface = inverseOnSurfaceLight,
        surfaceDim = surfaceDimLight,
        surfaceBright = surfaceBrightLight,
        surfaceContainerLowest = surfaceContainerLowestLight,
        surfaceContainerLow = surfaceContainerLowLight,
        surfaceContainer = surfaceContainerLight,
        surfaceContainerHigh = surfaceContainerHighLight,
        surfaceContainerHighest = surfaceContainerHighestLight,
    )
    val BlueDark = darkColorScheme(
        primary = primaryDarkBlue,
        onPrimary = onPrimaryDarkBlue,
        primaryContainer = primaryContainerDarkBlue,
        onPrimaryContainer = onPrimaryContainerDarkBlue,
        secondary = secondaryDarkBlue,
        onSecondary = onSecondaryDarkBlue,
        secondaryContainer = secondaryContainerDarkBlue,
        onSecondaryContainer = onSecondaryContainerDarkBlue,
        inversePrimary = inversePrimaryDarkBlue,
        tertiary = tertiaryDark,
        onTertiary = onTertiaryDark,
        tertiaryContainer = tertiaryContainerDark,
        onTertiaryContainer = onTertiaryContainerDark,
        error = errorDark,
        onError = onErrorDark,
        errorContainer = errorContainerDark,
        onErrorContainer = onErrorContainerDark,
        background = backgroundDark,
        onBackground = onBackgroundDark,
        surface = surfaceDark,
        onSurface = onSurfaceDark,
        surfaceVariant = surfaceVariantDark,
        onSurfaceVariant = onSurfaceVariantDark,
        outline = outlineDark,
        outlineVariant = outlineVariantDark,
        scrim = scrimDark,
        inverseSurface = inverseSurfaceDark,
        inverseOnSurface = inverseOnSurfaceDark,
        surfaceDim = surfaceDimDark,
        surfaceBright = surfaceBrightDark,
        surfaceContainerLowest = surfaceContainerLowestDark,
        surfaceContainerLow = surfaceContainerLowDark,
        surfaceContainer = surfaceContainerDark,
        surfaceContainerHigh = surfaceContainerHighDark,
        surfaceContainerHighest = surfaceContainerHighestDark,
    )

    val OrangeLight = lightColorScheme(
        primary = primaryLightOrange,
        onPrimary = onPrimaryLightOrange,
        primaryContainer = primaryContainerLightOrange,
        onPrimaryContainer = onPrimaryContainerLightOrange,
        secondary = secondaryLightOrange,
        onSecondary = onSecondaryLightOrange,
        secondaryContainer = secondaryContainerLightOrange,
        onSecondaryContainer = onSecondaryContainerLightOrange,
        inversePrimary = inversePrimaryLightOrange,
        tertiary = tertiaryLight,
        onTertiary = onTertiaryLight,
        tertiaryContainer = tertiaryContainerLight,
        onTertiaryContainer = onTertiaryContainerLight,
        error = errorLight,
        onError = onErrorLight,
        errorContainer = errorContainerLight,
        onErrorContainer = onErrorContainerLight,
        background = backgroundLight,
        onBackground = onBackgroundLight,
        surface = surfaceLight,
        onSurface = onSurfaceLight,
        surfaceVariant = surfaceVariantLight,
        onSurfaceVariant = onSurfaceVariantLight,
        outline = outlineLight,
        outlineVariant = outlineVariantLight,
        scrim = scrimLight,
        inverseSurface = inverseSurfaceLight,
        inverseOnSurface = inverseOnSurfaceLight,
        surfaceDim = surfaceDimLight,
        surfaceBright = surfaceBrightLight,
        surfaceContainerLowest = surfaceContainerLowestLight,
        surfaceContainerLow = surfaceContainerLowLight,
        surfaceContainer = surfaceContainerLight,
        surfaceContainerHigh = surfaceContainerHighLight,
        surfaceContainerHighest = surfaceContainerHighestLight,
    )
    val OrangeDark = darkColorScheme(
        primary = primaryDarkOrange,
        onPrimary = onPrimaryDarkOrange,
        primaryContainer = primaryContainerDarkOrange,
        onPrimaryContainer = onPrimaryContainerDarkOrange,
        secondary = secondaryDarkOrange,
        onSecondary = onSecondaryDarkOrange,
        secondaryContainer = secondaryContainerDarkOrange,
        onSecondaryContainer = onSecondaryContainerDarkOrange,
        inversePrimary = inversePrimaryDarkOrange,
        tertiary = tertiaryDark,
        onTertiary = onTertiaryDark,
        tertiaryContainer = tertiaryContainerDark,
        onTertiaryContainer = onTertiaryContainerDark,
        error = errorDark,
        onError = onErrorDark,
        errorContainer = errorContainerDark,
        onErrorContainer = onErrorContainerDark,
        background = backgroundDark,
        onBackground = onBackgroundDark,
        surface = surfaceDark,
        onSurface = onSurfaceDark,
        surfaceVariant = surfaceVariantDark,
        onSurfaceVariant = onSurfaceVariantDark,
        outline = outlineDark,
        outlineVariant = outlineVariantDark,
        scrim = scrimDark,
        inverseSurface = inverseSurfaceDark,
        inverseOnSurface = inverseOnSurfaceDark,
        surfaceDim = surfaceDimDark,
        surfaceBright = surfaceBrightDark,
        surfaceContainerLowest = surfaceContainerLowestDark,
        surfaceContainerLow = surfaceContainerLowDark,
        surfaceContainer = surfaceContainerDark,
        surfaceContainerHigh = surfaceContainerHighDark,
        surfaceContainerHighest = surfaceContainerHighestDark,
    )
}